name: tre-workspace-imaging-annotations
version: 0.1.5
description: "A base Azure TRE workspace"
registry: azuretre

credentials:
  - name: azure_tenant_id
    env: ARM_TENANT_ID
  - name: azure_subscription_id
    env: ARM_SUBSCRIPTION_ID
  - name: azure_client_id
    env: ARM_CLIENT_ID
  - name: azure_client_secret
    env: ARM_CLIENT_SECRET

parameters:
  - name: tre_id
    type: string
    description: "The ID of the parent TRE instance e.g., mytre-dev-3142"
  - name: id
    type: string
    description: "the resource ID for this installation"
    env: id
  - name: azure_location
    type: string
    description: "Azure location (region) to deploy to"
  - name: address_space
    type: string
    description: "VNet address space for the workspace services"
  - name: tfstate_resource_group_name
    type: string
    description: "Resource group containing the Terraform state storage account"
  - name: tfstate_storage_account_name
    type: string
    description: "The name of the Terraform state storage account"
  - name: tfstate_container_name
    type: string
    default: "tfstate"
    description: "The name of the Terraform state storage container"
  - name: arm_use_msi
    env: ARM_USE_MSI
    default: false

mixins:
  - exec
  - az
  - terraform:
      clientVersion: 1.0.4

install:
  - terraform:
      description: "Deploy workspace"
      input: false
      vars:
        tre_id: "{{ bundle.parameters.tre_id }}"
        tre_resource_id: "{{ bundle.parameters.id }}"
        location: "{{ bundle.parameters.azure_location }}"
        address_space: "{{ bundle.parameters.address_space }}"
      backendConfig:
        resource_group_name: "{{ bundle.parameters.tfstate_resource_group_name }}"
        storage_account_name: "{{ bundle.parameters.tfstate_storage_account_name }}"
        container_name: "{{ bundle.parameters.tfstate_container_name }}"
        key: "tre-workspace-imaging-annotations-{{ bundle.parameters.id }}"
      outputs:
        - name: "monai_vm_name"
        - name: "avd_vm_name"
        - name: "rg_name"
        - name: "blob_dns_zone"
        - name: "storage_account_name"
  - az:
      description: "az login"
      arguments:
        - login
      flags:
        identity:
        username: "{{ bundle.credentials.azure_client_id}}"
      # flags:
      #   service-principal:
      #   username: "{{ bundle.credentials.azure_client_id}}"
      #   password: "{{ bundle.credentials.azure_client_secret}}"
      #   tenant: "{{ bundle.credentials.azure_tenant_id}}"
  # - az:
  #     description: "Create storage container"
  #     arguments:
  #       - storage
  #       - fs
  #       - create
  #     flags:
  #       name: "monai-data"
  #       account-name: "{{ bundle.outputs.storage_account_name }}"
  #       auth-mode: "login"
  #       subscription: "{{ bundle.credentials.azure_subscription_id }}"
  - exec:
      description: "Create storage container and ACL"
      command: ./scripts/create_storage_container.sh
      flags:
        a: "{{ bundle.outputs.storage_account_name }}"
        s: "{{ bundle.credentials.azure_subscription_id }}"
  - az:
      description: "Mount Blob Storage as NFSv3 share"
      arguments:
        - vm
        - run-command
        - invoke
      flags:
        command-id: "RunShellScript"
        name: "{{ bundle.outputs.monai_vm_name }}"
        resource-group: "{{ bundle.outputs.rg_name }}"
        subscription: "{{ bundle.credentials.azure_subscription_id }}"
        scripts: "\"mkdir /monai-data && echo '{{ bundle.outputs.storage_account_name }}.{{ bundle.outputs.blob_dns_zone }}:/{{ bundle.outputs.storage_account_name }}/monai-data  /monai-data  nfs  sec=sys,vers=3,nolock,proto=tcp  0 0' >> /etc/fstab && mount /monai-data\""
  - az:
      description: "Install & Run Monai Label"
      arguments:
        - vm
        - run-command
        - invoke
      flags:
        command-id: "RunShellScript"
        name: "{{ bundle.outputs.monai_vm_name }}"
        resource-group: "{{ bundle.outputs.rg_name }}"
        subscription: "{{ bundle.credentials.azure_subscription_id }}"
        scripts: "\"su - adminuser -c 'pip install monailabel --progress-bar off && monailabel apps --download --name deepedit --output apps && monailabel datasets --download --name Task02_Heart --output datasets && monailabel start_server --app apps/deepedit --studies datasets/Task02_Heart/imagesTr --port 8008 &'\""
  - exec:
      description: "Install 3DSlicer on AVD host"
      command: ./scripts/vm_run_command.sh
      flags:
        v: "{{ bundle.outputs.avd_vm_name }}"
        g: "{{ bundle.outputs.rg_name }}"
        s: "{{ bundle.credentials.azure_subscription_id }}"
        o: "windows"
        t: "./scripts/install_3dslicer.ps1"

upgrade:
  - exec:
      description: "Upgrade workspace"
      command: echo
      arguments:
        - "This workspace does not implement upgrade action"

uninstall:
  - terraform:
      description: "Tear down workspace"
      input: false
      vars:
        tre_id: "{{ bundle.parameters.tre_id }}"
        tre_resource_id: "{{ bundle.parameters.id }}"
        location: "{{ bundle.parameters.azure_location }}"
        address_space: "{{ bundle.parameters.address_space }}"
      backendConfig:
        resource_group_name: "{{ bundle.parameters.tfstate_resource_group_name }}"
        storage_account_name: "{{ bundle.parameters.tfstate_storage_account_name }}"
        container_name: "{{ bundle.parameters.tfstate_container_name }}"
        key: "tre-workspace-imaging-annotations-{{ bundle.parameters.id }}"
